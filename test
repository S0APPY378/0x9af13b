_G.HideCharacter = true -- Required for most features!
_G.TransparentRig = true -- Shows a transparent rig where the character is incase it doesnt load
_G.HatCollide = false -- Enables the ability for other people to collide with / touch your hats (recommended false due to being buggy asf)
_G.FlingEnabled = false -- Enables or disables fling (KEEP FALSE IN HAT COLLIDE!)
_G.TeleportCharacter = true
--[[ 
Oxide V2 
Anything below should NOT be changed
THIS IS BASED ON A REALLY OLD VERSION OF OXIDE, DO NOT TOUCH ANYTHING THIS SHIT WILL BREAK LOL
]]
_G.SBV4R = false
_G.R6Mode = false
_G.MiztCompat = true
_G.Fling = false
local flingpos = game.Players.LocalPlayer:GetMouse().Hit
local flingpart = game.Players.LocalPlayer:GetMouse().Target
local flingplr = nil
local sineee=os.clock()
local sine=os.clock()
local plr =game:GetService("Players").LocalPlayer
local lastcf = workspace.CurrentCamera.CFrame
local oldh = workspace.FallenPartsDestroyHeight
_G.oldh = oldh or -500
local stopped = false
local respawnloop
local tools = {}
local faketools = {}
workspace.FallenPartsDestroyHeight = 0/0
game:GetService("StarterGui"):SetCore("SendNotification", {
	Title = "Oxide Reanimation V2.1a";
	Duration = 20;
	Text = "This script was made by Nitro"
})
local Hat = {
	Rename = function(HatID, NAME, oname)
    pcall(function()
		if oname == nil then oname = "Hat" end
		for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
			if v:IsA("Accessory") then
				if game:GetService("Players").LocalPlayer.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
					if v:WaitForChild("Handle"):FindFirstChildWhichIsA("SpecialMesh").TextureId == HatID then
						if oname == "Hat" then
							v.Name = NAME
						elseif oname == "LARM" then
							v.Name = "fooblet"
						elseif oname == "RARM" then
							v.Name = "gooblet"
						else
							v.Name = NAME
						end
					end
				elseif game:GetService("Players").LocalPlayer.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 and v.Handle.TextureId == HatID  then
					if oname == "Hat" then
						v.Name = NAME
					elseif oname == "LARM" then
						v.Name = "fooblet"
					elseif oname == "RARM" then
						v.Name = "gooblet"
					else
						v.Name = NAME
					end
				elseif game:GetService("Players").LocalPlayer.Character.Humanoid.RigType == Enum.HumanoidRigType.R15 then
					if v.Handle.TextureID == HatID then
						if oname == "Hat" then
							v.Name = NAME
						elseif oname == "LARM" then
							v.Name = "fooblet"
						elseif oname == "RARM" then
							v.Name = "gooblet"
						else
							v.Name = NAME
						end
					end
				end
			end
		end
                    end)
	end,
	Rename2 = function(HatID, NAME,rname, oname)
    pcall(function()
		if oname == nil then oname = "Hat" end
		for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do
			if v:IsA("Accessory") then
				if game:GetService("Players").LocalPlayer.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
					if v:WaitForChild("Handle"):FindFirstChildWhichIsA("SpecialMesh").TextureId == HatID then
						if v.Name == rname then
							if oname == "Hat" then
								v.Name = NAME
							elseif oname == "LARM" then
								v.Name = "fooblet"
							elseif oname == "RARM" then
								v.Name = "gooblet"
							else
								v.Name = NAME
							end
						end
					end
				elseif game:GetService("Players").LocalPlayer.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 and v.Handle.TextureId == HatID  then
					if v.Name == rname then
						if oname == "Hat" then
							v.Name = NAME
						elseif oname == "LARM" then
							v.Name = "fooblet"
						elseif oname == "RARM" then
							v.Name = "gooblet"
						else
							v.Name = NAME
						end
					end
				elseif game:GetService("Players").LocalPlayer.Character.Humanoid.RigType == Enum.HumanoidRigType.R15 then
					if v.Name == rname then
						if oname == "Hat" then
							v.Name = NAME
						elseif oname == "LARM" then
							v.Name = "fooblet"
						elseif oname == "RARM" then
							v.Name = "gooblet"
						else
							v.Name = NAME
						end
					end
				end
			end
		end
                        end)
	end,}
local function redo()
	wait(.1)
	
	local gay = true -- dont edit >:(
	hmode = nil
	if gay == true then
		hmode = "norm" 
	else
		hmode = "alsoo3" -- hate this guy
	end
	Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Nitro-GT/OxideReanim/main/library"))()
	local HatMode=hmode
	if HatMode=="alsoo3" then
		local HATDUPES = Library.MakeTableOfHats("Mesh",{Mesh_Id=4315410540})
		HATDUPES[1].Name = "DemonGodSword"
		HATDUPES[2].Name = "RainbowGodSword"
		HATDUPES[3].Name = "ToxicLordSword"
		HATDUPES[4].Name = "DemonLordSword"
		if Library.FindHat("ShadowBladeMasterAccessory") then
			Library.FindHat("ShadowBladeMasterAccessory").Name="VoidLordSword"
		end
		if Library.FindHat("BladeMasterAccessory") then
			Library.FindHat("BladeMasterAccessory").Name="AuroraSword"
		end
	else
		print("richhhh")
	end
	--game:GetService("Workspace")["Error_30363"].EyesOfTheEverWorld.Name = "Puffer Vest"
	_G.HeadMovement = false -- respawns your character and you will also have no animations unless you run a script
	_G.HeadMovementv4 = false -- v2 was this but shit (semi-bot)
	_G.HeadMovementv3 = true -- just aligns hats (iron bulb head)
	_G.fakeHeadMovementv2 = false -- uses permadeath and the same hats as headmovementv2 to look cool or some shit (need fling hat)
	_G.HatLimbs = true  -- swaps your limbs with hats
	_G.PermaDeath = true
	_G.ShowNetwork = false -- enable for debugging
	_G.BlockHead = false  
	_G.ReanimatedAnimations = false
	_G.CFalign = false -- CFalign = better looking but less features , Original method (false) = worse looking  but more features
	_G.BlockArm = false -- hides head with wackyhead
	_G.YellowHatTorso = false -- smaller but looks ok
	_G.Netless = true
	_G.rcdbypass = true
	_G.StabilityIncrease = true -- slight jitter motion but wont crumble
	_G.DelHead = false -- deletes head
	_G.HatBody = false -- gives hat torso aswel 
	_G.AntiFling = true
	_G.EnableNetLib = false
	_G.wackyhead = false -- changes non pd alot
	_G.BodyForceEnabled = true
	_G.FasterLoad = true -- loads perma instantly (kinda) but is really buggy
	_G.HealthHide = false -- patched
	_G.Blockwackyhead = false -- sometimes face dissapears
	_G.R15toR6 = false -- no settings work
	local char = game:GetService("Players").LocalPlayer.Character
	for i,v in pairs(char:GetDescendants()) do
		if v:IsA("SpecialMesh") then
			if v.MeshId == "rbxassetid://13003592387"  then
				v.Parent.Parent.Name = "funnihead"
			end
		end
	end
	local char = game:GetService("Players").LocalPlayer.Character
	for i,v in pairs(char:GetDescendants()) do
		if v:IsA("MeshPart") then
			if v.MeshId == "rbxassetid://13003592387"  then
				v.Parent.Name = "funnihead"
			end
		end
	end
	local c = game:GetService("Players").LocalPlayer.Character
	_G.OxideRealChar = c
	local nria = false 
	local nlia = false 
	if c:FindFirstChild("Accessory (NoobRightArm)") then 
		nria = true 
	end 
	if c:FindFirstChild("Accessory (NoobLeftArm)") then 
		nlia = true 
	end 
	print(nria,nlia)
	if _G.CustomHats == false then
		pcall(function()
			Hat.Rename("rbxassetid://17374768001","","LARM")
			Hat.Rename("rbxassetid://17374768001","","RARM")
			Hat.Rename("rbxassetid://14251599953", "Tor")
		end)
		pcall(function()
			Hat.Rename("rbxassetid://18640914168","","LARM")
			Hat.Rename("rbxassetid://18640914168","","RARM")
		end)
		pcall(function()
			Hat.Rename("rbxassetid://14255544465","","LARM")
			Hat.Rename("rbxassetid://14255544465","","RARM")
		end)
		pcall(function()
			Hat.Rename("rbxassetid://13415110780", "Tor")
		end)
		pcall(function()
			Hat.Rename("rbxassetid://18640899481", "Tor")
		end)
		pcall(function()
			Hat.Rename("rbxassetid://14255543546","","LARM")
			Hat.Rename("rbxassetid://14255543546","","RARM")
		end)
		pcall(function()
			Hat.Rename("rbxassetid://14768664565", "Tor")
			Hat.Rename("rbxassetid://14768683674","","LARM")
			Hat.Rename("rbxassetid://14768683674","","RARM")
		end)
	else
		pcall(function()
			Hat.Rename2("rbxassetid://".._G.CH.Torso.TextureId, "Tor",_G.CH.Torso.Name)
			Hat.Rename2("rbxassetid://".._G.CH.LeftArm.TextureId,"",_G.CH.LeftArm.Name,"LARM")
			Hat.Rename2("rbxassetid://".._G.CH.RightArm.TextureId,"",_G.CH.RightArm.Name,"RARM")
			Hat.Rename2("rbxassetid://".._G.CH.LeftLeg.TextureId,"Accessory (LLeg)",_G.CH.LeftLeg.Name)
			Hat.Rename2("rbxassetid://".._G.CH.RightLeg.TextureId,"Accessory (rightleg)",_G.CH.RightLeg.Name)	
			Hat.Rename2("http://www.roblox.com/asset/?id=".._G.CH.Torso.TextureId, "Tor",_G.CH.Torso.Name)
			Hat.Rename2("http://www.roblox.com/asset/?id=".._G.CH.LeftArm.TextureId,"",_G.CH.LeftArm.Name,"LARM")
			Hat.Rename2("http://www.roblox.com/asset/?id=".._G.CH.RightArm.TextureId,"",_G.CH.RightArm.Name,"RARM")
			Hat.Rename2("http://www.roblox.com/asset/?id=".._G.CH.LeftLeg.TextureId,"Accessory (LLeg)",_G.CH.LeftLeg.Name)
			Hat.Rename2("http://www.roblox.com/asset/?id=".._G.CH.RightLeg.TextureId,"Accessory (rightleg)",_G.CH.RightLeg.Name)	
		end)
	end
	pcall(function()
		c.gooblet.Name = "fooblet"
	end)
	pcall(function()
		c.gooblet.Name = "fooblet"
	end)
	pcall(function()
		c["Accessory (LARM)"].Name = "gooblet"
	end)
	pcall(function()
		c["Accessory (RARM)"].Name = "RARM"
	end)
	pcall(function()
		if not c:FindFirstChild("Accessory (rightleg)") then
			c.gooblet.Name = "Accessory (rightleg)"
		end
	end)
	pcall(function()
		if not c:FindFirstChild("Accessory (LLeg)") then
			c.gooblet.Name = "Accessory (LLeg)"
		end
	end)
	pcall(function()
		c.fooblet.Name = "gooblet"
	end)
	pcall(function()
		if not c:FindFirstChild("Tor") then 
			c.ExtraNoobTorso.Name = "Tor"
		end
	end)
	pcall(function()
		c.SHADES.Handle.AccessoryWeld.C1 = CFrame.new(0, 0.025, -0.6, 1, 0, 0, 0, 1, 0, 0, 0, 1)
	end)
	pcall(function()
		c["Accessory (LARM)"].Name = "LARM"
	end)
	pcall(function()
		c["Accessory (RARM)"].Name = "RARM"
	end)
	loadstring(game:HttpGet("https://raw.githubusercontent.com/Nitro-GT/OxideReanim/main/renameclones3"))()
	if _G.EnableNetLib == true then
		loadstring(game:HttpGet("https://raw.githubusercontent.com/TypicallyAUser/random-stuff/main/4eyesnetlib.lua"))()
		Network.CharacterRelative = false
		coroutine.resume(Network["PartOwnership"]["Enable"])
	end
	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end
	local char
	if not workspace:FindFirstChild("non") then
		char =  game:GetObjects("rbxassetid://5195737219")[1]
	else
		char = workspace.non
	end
	_G.OxideFakeChar = char
	if _G.MiztCompat == false then
		char.Name = c.Name.." (Dummy)"
	else
		char.Name = "non"
	end
	local qqz = Instance.new("Shirt",char)
	qqz.ShirtTemplate = "rbxassetid://0"
	if not workspace:FindFirstChild("non") then
		char:SetPrimaryPartCFrame(c.HumanoidRootPart.CFrame *CFrame.new(0,0,2))
	else
		print("")
	end
	c["Body Colors"]:Clone().Parent = char
	game:GetService("Players").LocalPlayer.Character.PrimaryPart = c.Head
	char.HumanoidRootPart.Anchored = false
	for i,v in pairs(c:GetChildren()) do
		if v:IsA("Accessory") and v.Name == "Pants" then
			v:Destroy()
		end
	end
	char.Parent = workspace
	c.Parent = char
	_G.Flinging = false
	local swordbigvel = false
	velocity = game:GetService("RunService").Heartbeat:Connect(function(set)
		for i,v in pairs(c:GetChildren()) do
			if v:IsA("Accessory")  then
				v.Handle.AssemblyLinearVelocity = Vector3.new(char.Torso.AssemblyLinearVelocity.X*25, 25.01, char.Torso.AssemblyLinearVelocity*25)
			end
		end
	end)
	local function force(part,force)
		local bodyforce = Instance.new("BodyForce", part)
		bodyforce.Force = force
	end
	workspace.CurrentCamera.CameraSubject = workspace.non:FindFirstChild("Humanoid")
	for i,v in pairs(c:GetChildren()) do
		if v:IsA("Part") or v:IsA("MeshPart") then
			force(v,Vector3.new(80,80,80))
		end
	end
	speaker = game:GetService("Players").LocalPlayer
	for _, child in pairs(c:GetChildren()) do
		if child:IsA("Part") then
			child.Anchored = true
		elseif child:IsA("Accessory") then
			child.Handle.Anchored = true
		end
	end
	for _, v in pairs(char:GetChildren()) do
		if v:IsA("Part") then
			v.CollisionGroup = c.Head.CollisionGroup
		end
	end	
	if c.Humanoid.RigType == Enum.HumanoidRigType.R6 then
		for _,v in pairs(c:GetChildren()) do
			if v:IsA("Accessory")  and v.Name ~= "gooblet" and v.Name ~= "fooblet"   and v.Name ~= "Accessory (LLeg)" and v.Name ~= "Accessory (rightleg)"  and v.Name ~= "Rarm" and v.Name ~= "funnihead"  and v.Name ~= "Larm" and v.Name ~= "RectangleFace" and v.Name ~= "Black" and v.Name ~= "Accessory (LLeg)" and v.Name ~= "Accessory (rightleg)" and v.Name ~= "Tor" and v.Name ~= "RectangleHead-2"  and v.Name ~= "Tor" and v.Name ~= "LARM" and v.Name ~= "RARM"  and v.Name ~="Unloaded head" and v:WaitForChild("Handle"):FindFirstChildOfClass("SpecialMesh").MeshId ~= "rbxassetid://11263221350"  then
				if not char:FindFirstChild(v.Name) then
					local a = v:Clone()
					a.Handle.AccessoryWeld.Part1 = char[a.Handle.AccessoryWeld.Part1.Name]
					Accessory = v
					Handle = Accessory.Handle
					pcall(function() Handle:FindFirstChildOfClass("Weld"):Destroy() end)
					local NewWeld = Instance.new("Weld")
					NewWeld.Name = "AccessoryWeld"
					NewWeld.Part0 = Handle
					local Attachment = Handle:FindFirstChildOfClass("Attachment")
					if Attachment then
						NewWeld.C0 = Attachment.CFrame
						NewWeld.C1 = char:FindFirstChild(tostring(Attachment), true).CFrame
						NewWeld.Part1 = char:FindFirstChild(tostring(Attachment), true).Parent
					else
						NewWeld.Part1 = FakeCharacter:FindFirstChild("Head")
						NewWeld.C1 = CFrame.new(0,char:FindFirstChild("Head").Size.Y / 2,0) * Accessory.AttachmentPoint:Inverse()
					end
					Handle.CFrame = NewWeld.Part1.CFrame * NewWeld.C1 * NewWeld.C0:Inverse()
					NewWeld.Parent = Accessory.Handle 
					a.Parent = char
					a.Handle.Anchored = false
					if _G.TransparentRig == true then
						a.Handle.Transparency = .5
					else 
						a.Handle.Transparency = 1
					end
				end
			end
		end
	else
		for _,v in pairs(c:GetChildren()) do
			if v:IsA("Accessory")  and v.Name ~= "gooblet" and v.Name ~= "fooblet"  and v.Name ~= "Rarm" and v.Name ~= "funnihead"  and v.Name ~= "Larm" and v.Name ~= "RectangleFace" and v.Name ~= "Tor" and v.Name ~= "RectangleHead-2"  and v.Name ~= "Tor" and v.Name ~= "LARM" and v.Name ~= "RARM"  and v.Name ~="Unloaded head" and v:WaitForChild("Handle").MeshId ~= "rbxassetid://11263221350"  then
				if not char:FindFirstChild(v.Name) then
					local a = v:Clone()
					a.Handle:BreakJoints()
					Accessory = v
					Handle = Accessory.Handle
					z = a
					a.Parent = char
					a.Handle.Anchored = false
					if _G.TransparentRig == true then
						a.Handle.Transparency = .5
					else 
						a.Handle.Transparency = 1
					end
					a.Handle.Position = char.Head.Position
					a.Handle.Velocity = Vector3.new(0,0,0)
					a.Handle.Massless = true
					w = Instance.new("Weld",z.Handle)
					w.C0 = w.Parent:FindFirstChildOfClass("Attachment").CFrame
					w.Name = "AccessoryWeld"
					w.Part0 = z.Handle
					a  = w.Parent:FindFirstChildOfClass("Attachment")
					if string.find(a.Name,"Left") then
						if string.find(a.Name,"Shoulder") then
							w.Part1 = char["Left Arm"]
							w.C1 =  char["Left Arm"].LeftShoulderAttachment.CFrame
						end
					elseif string.find(a.Name,"Right") then
						if string.find(a.Name,"Shoulder") then
							w.Part1 = char["Right Arm"]
							w.C1 =  char["Right Arm"].RightShoulderAttachment.CFrame
						end
					elseif string.find(a.Name,"Left") then
						if string.find(a.Name,"Foot") then
							w.Part1 = char["Left Leg"]
							w.C1 =  char["Left Leg"].LeftFootAttachment.CFrame
						end
					elseif string.find(a.Name,"Right") then
						if string.find(a.Name,"Foot") then
							w.Part1 = char["Right Leg"]
							w.C1 =  char["Right Leg"].RightFootAttachment.CFrame
						end
					elseif string.find(a.Name,"Waist") then
						if string.find(a.Name,"Back") then
							w.Part1 = char["Torso"]
							w.C1 =  char["Torso"].WaistBackAttachment.CFrame
						end    
					elseif string.find(a.Name,"Body") then
						if string.find(a.Name,"Back") then
							w.Part1 = char["Torso"]
							w.C1 =  char["Torso"].BodyBackAttachment.CFrame
						elseif  string.find(a.Name,"Front") then
							w.Part1 = char["Torso"]
							w.C1 =  char["Torso"].BodyFrontAttachment.CFrame
						end    
					elseif string.find(a.Name,"Hat") then
						w.Part1 = char["Head"]
						w.C1 =  char["Head"].HatAttachment.CFrame 
					elseif string.find(a.Name,"FaceFront") then
						w.Part1 = char["Head"]
						w.C1 =  char["Head"].FaceFrontAttachment.CFrame 
					elseif string.find(a.Name,"FaceCenter") then
						w.Part1 = char["Head"]
						w.C1 =  char["Head"].FaceCenterAttachment.CFrame 
					elseif string.find(a.Name,"Neck") then
						w.Part1 = char["Torso"]
						w.C1 =  char["Torso"].NeckAttachment.CFrame 
					elseif string.find(a.Name,"Hair") then
						w.Part1 = char["Head"]
						w.C1 =  char["Head"].HairAttachment.CFrame 
					end
				end
			end
		end
	end
	for i,v in pairs(c:GetChildren()) do
		if v:IsA("Accessory") then
			force(v.Handle,Vector3.new(80,80,80))
		end
	end
	for _,v in pairs(c:GetChildren()) do
		if v:IsA("Accessory") and v.Name ~= "RectangleHead" and v.Name ~= "RectangleHead-1"  and v.Name ~= "RectangleHead-3"  and v.Name ~= "funnihead" and v.Name ~= "RectangleFace-1" and v.Name ~= "RectangleFace" and v.Name ~= "RectangleFace-2" and v.Name ~= "RectangleHead-2"     then
			v.Handle:BreakJoints()
		end
	end 
	for _,v in pairs(c:GetChildren()) do
		if v:IsA("Accessory") and v.Name == "RectangleHead" and v.Name =="Puffer Vest" and v.Name == "RectangleFace" and v.Name == "RectangleFace-2" and v.Name == "RectangleHead-2"     then
			v.Handle:BreakJoints()
		end
	end 
	for _, child in pairs(char:GetChildren()) do
		local v = child
		if child:IsA("BasePart") and v.Name ~= "Head" and v.Name ~= "HumanoidRootPart" then
			if _G.TransparentRig == true then
				child.Transparency = .5
			else 
				child.Transparency = 1 
			end
		end
	end
	local ch = game:GetService("Players").LocalPlayer.Character
	local prt=Instance.new("Model", workspace)
	local z1 =  Instance.new("Part", prt)
	z1.Name="Torso"
	z1.CanCollide = false
	z1.Anchored = true
	local z2  =Instance.new("Part", prt)
	z2.Name="Head"
	z2.Anchored = true
	z2.CanCollide = false
	local z3 =Instance.new("Humanoid", prt)
	z3.Name="Humanoid"
	z1.Position = Vector3.new(0,9999,0)
	z2.Position = Vector3.new(0,9991,0)
	function getRoot(char)
		local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso')
		return rootPart
	end
	local character = game:GetService("Players").LocalPlayer.Character
	local humanoid = character:FindFirstChildOfClass("Humanoid")
	if humanoid and humanoid.SeatPart then
		humanoid.Sit = false
		wait(0.1)
	end
	local hipHeight = humanoid and humanoid.HipHeight > 0 and (humanoid.HipHeight + 1)
	local rootPart = getRoot(character)
	local rootPartPosition = rootPart.Position
	game:GetService("Players").LocalPlayer.Character=prt
	game:GetService("Players").LocalPlayer.Character=char
	if _G.wackyhead == true then 
		wait(game:GetService("Players").RespawnTime + 0.5)  
	end
	--wait(game:GetService("Players").RespawnTime + 0.25)  
	rootPart.CFrame = CFrame.new(char.HumanoidRootPart.CFrame.X,char.HumanoidRootPart.CFrame.Y,char.HumanoidRootPart.CFrame.Z) + Vector3.new(0, hipHeight or 4, 0)
	if _G.ReanimatedAnimations == true then
		pcall(function()
			c.Animate.Disabled = true
			c.Animate.Disabled = false
			--char.Animate:Destroy()
			c.Animate.Parent = char
			char.Animate.Disabled = true
			--char.Animate.Disabled = false
		end)
		c.Humanoid.Animator.Parent = char.Humanoid
	else 
		--char.Animate:Destroy()
		c.Animate.Disabled = true
		c.Animate.Parent = char
		char.Animate.Disabled = true
		c.Humanoid.Animator.Parent = char.Humanoid
	end
	if c:FindFirstChild("Torso") then
		c.Torso["Right Hip"]:Destroy()
		c.Torso["Left Hip"]:Destroy()
		c.Torso["Right Shoulder"]:Destroy()
		c.Torso["Left Shoulder"]:Destroy()
	end
	if _G.wackyhead == true then 
		c.Torso.Neck:Destroy()
	end
	c.Humanoid:TakeDamage(c.Humanoid.MaxHealth*9e9)
	c:BreakJoints()
	if c:FindFirstChild("Torso") then
		--c.Torso.Neck:Destroy()
	else
		--c.Head.Neck:Destroy()
		c.Humanoid:TakeDamage(c.Humanoid.MaxHealth)
	end
	local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/TypicallyAUser/TypicalsConvertingLibrary/main/Main"))()
	speaker = game:GetService("Players").LocalPlayer
	Clip = false
	local Char = game:GetService("Players").LocalPlayer.Character
	local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")
	for i,v in next, Hum:GetPlayingAnimationTracks() do
		v:Stop()
	end
	for _, child in pairs(c:GetChildren()) do
		if child:IsA("Part") then
			child.Anchored = true
		elseif child:IsA("Accessory") then
			child.Handle.Anchored = false
		end
	end
	local removinghealth = false
	if _G.Blockwackyhead == true and _G.wackyhead == true then
		c.Hat1.Handle:ClearAllChildren()
	end
	if _G.wackyhead == true and _G.HatBody == true then
		c.Head:Destroy()
		c.PrimaryPart = c["Right Arm"]
	end
	if _G.wackyhead == true and _G.BlockArm == true then
		c.Head:Destroy()
		c.PrimaryPart = c["Right Arm"]
	end
	local canactuallydo
	if _G.FasterLoad == true then
		canactuallydo = false
	else
		canactuallydo = true
	end
	for k,v in pairs(c:GetChildren()) do
		if v:IsA("Accessory") then
			--     v.Handle:FindFirstChild("Attachment"):Destroy() -- destroying basic welds
		end
	end
	-- workspace[game:GetService("Players").LocalPlayer.Name.." Protected Welds"]:Destroy()
	local sin = math.sin
	local connect
	local antisleepMultiplier=Vector3.new(-.0025,-.005,-.0025)
	if _G.CustomHats == false then
	connect = game:GetService("RunService").Heartbeat:Connect(function(set)
		sine=os.clock
		local antisleep=sin(sine()*100)*antisleepMultiplier
		pcall(function()
			c["Tor"].Handle.CFrame = char["Torso"].CFrame *CFrame.new(0,0,0)   +antisleep
		end)
		pcall(function()
			c["gooblet"].Handle.CFrame = char["Left Arm"].CFrame * CFrame.Angles(math.rad(0),math.rad(0),math.rad(90))  +antisleep
		end)
		pcall(function()
			c["fooblet"].Handle.CFrame = char["Right Arm"].CFrame * CFrame.Angles(math.rad(0),math.rad(0),math.rad(90))+antisleep
		end)
		pcall(function()
			c["Accessory (rightleg)"].Handle.CFrame = char["Right Leg"].CFrame  * CFrame.Angles(math.rad(0),math.rad(0),math.rad(90))   +antisleep
		end)
		pcall(function()
			c["Accessory (LLeg)"].Handle.CFrame = char["Left Leg"].CFrame  * CFrame.Angles(math.rad(0),math.rad(0),math.rad(90))   +antisleep
		end)
		pcall(function()
			for _,v in pairs(c:GetChildren()) do
				if v:IsA("Accessory") and v.Name ~= "gooblet" and v.Name ~= "fooblet"   and v.Name ~= "Tor" and v.Name ~= "LARM" and v.Name ~= "RARM" and v.Name ~= "Accessory (rightleg)" and v.Name ~= "Accessory (LLeg)" then  
					v.Handle.CFrame = char[v.Name].Handle.CFrame +antisleep
					v.Handle.CanTouch = false
				end
			end
		end)       
		for _,v in pairs(c:GetChildren()) do
			if v:IsA("Accessory")   then
				v.Handle.CanCollide = false
			end
		end
		oldcf = workspace.CurrentCamera.CFrame
		settings().Physics.AllowSleep = false
	end)
else 
	connect = game:GetService("RunService").Heartbeat:Connect(function(set)
		sine=os.clock
		local antisleep=sin(sine()*100)*antisleepMultiplier
		pcall(function()
			c["Tor"].Handle.CFrame = char["Torso"].CFrame * _G.CH.Torso.Orientation  +antisleep
		end)
		pcall(function()
			c["gooblet"].Handle.CFrame = char["Left Arm"].CFrame * _G.CH.LeftArm.Orientation  +antisleep
		end)
		pcall(function()
			c["fooblet"].Handle.CFrame = char["Right Arm"].CFrame * _G.CH.RightArm.Orientation  +antisleep
		end)
		pcall(function()
			c["Accessory (rightleg)"].Handle.CFrame = char["Right Leg"].CFrame  *_G.CH.RightLeg.Orientation   +antisleep
		end)
		pcall(function()
			c["Accessory (LLeg)"].Handle.CFrame = char["Left Leg"].CFrame  * _G.CH.LeftLeg.Orientation   +antisleep
		end)
		pcall(function()
			for _,v in pairs(c:GetChildren()) do
				if v:IsA("Accessory") and v.Name ~= "gooblet" and v.Name ~= "fooblet"   and v.Name ~= "Tor" and v.Name ~= "LARM" and v.Name ~= "RARM" and v.Name ~= "Accessory (rightleg)" and v.Name ~= "Accessory (LLeg)" then  
					v.Handle.CFrame = char[v.Name].Handle.CFrame +antisleep
					v.Handle.CanTouch = false
				end
			end
		end)       
		for _,v in pairs(c:GetChildren()) do
			if v:IsA("Accessory")   then
				v.Handle.CanCollide = false
			end
		end
		oldcf = workspace.CurrentCamera.CFrame
		settings().Physics.AllowSleep = false
	end)
end
	settings().Physics.AllowSleep = false
	wait()
	pcall(function()
		rootPart.CFrame = CFrame.new(char.HumanoidRootPart.CFrame.X,-300,char.HumanoidRootPart.CFrame.Z) + Vector3.new(0, hipHeight or 4, 0)
	end)
	pcall(function()
		for _, child in pairs(c:GetChildren()) do
			if child:IsA("Part") then
				child.Anchored = false
			elseif child:IsA("Accessory") then
				child.Handle.Anchored = false
			end
		end
	end)
	task.spawn(function()
		wait(game:GetService("Players").RespawnTime - .05)
		task.wait(.05)
		velocity:Disconnect() 
		connect:Disconnect()
		velocity:Disconnect() 
		pcall(function()
			velocity:Disconnect() 
		end)
		task.spawn(function()
			while velocity.Connected == true do 
				task.wait()
				velocity:Disconnect()
			end
		end)
	end)
end
local function redo2()
	wait(.001)
	local gay = true -- dont edit >:(
	hmode = nil
	if gay == true then
		hmode = "norm" 
	else
		hmode = "alsoo3" -- hate this guy
	end
	Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Nitro-GT/OxideReanim/main/library"))()
	local HatMode=hmode
	if HatMode=="alsoo3" then
		local HATDUPES = Library.MakeTableOfHats("Mesh",{Mesh_Id=4315410540})
		HATDUPES[1].Name = "DemonGodSword"
		HATDUPES[2].Name = "RainbowGodSword"
		HATDUPES[3].Name = "ToxicLordSword"
		HATDUPES[4].Name = "DemonLordSword"
		if Library.FindHat("ShadowBladeMasterAccessory") then
			Library.FindHat("ShadowBladeMasterAccessory").Name="VoidLordSword"
		end
		if Library.FindHat("BladeMasterAccessory") then
			Library.FindHat("BladeMasterAccessory").Name="AuroraSword"
		end
	else
	end
	local c = game:GetService("Players").LocalPlayer.Character
	_G.OxideRealChar = c
	local nria = false 
	local nlia = false 
	if _G.CustomHats == false then
		pcall(function()
			Hat.Rename("rbxassetid://17374768001","","LARM")
			Hat.Rename("rbxassetid://17374768001","","RARM")
			Hat.Rename("rbxassetid://14251599953", "Tor")
		end)
		pcall(function()
			Hat.Rename("rbxassetid://18640914168","","LARM")
			Hat.Rename("rbxassetid://18640914168","","RARM")
		end)
		pcall(function()
			Hat.Rename("rbxassetid://14255544465","","LARM")
			Hat.Rename("rbxassetid://14255544465","","RARM")
		end)
		pcall(function()
			Hat.Rename("rbxassetid://13415110780", "Tor")
		end)
		pcall(function()
			Hat.Rename("rbxassetid://18640899481", "Tor")
		end)
		pcall(function()
			Hat.Rename("rbxassetid://14255543546","","LARM")
			Hat.Rename("rbxassetid://14255543546","","RARM")
		end)
		pcall(function()
			Hat.Rename("rbxassetid://14768664565", "Tor")
			Hat.Rename("rbxassetid://14768683674","","LARM")
			Hat.Rename("rbxassetid://14768683674","","RARM")
		end)
	else
		pcall(function()
			Hat.Rename2("rbxassetid://".._G.CH.Torso.TextureId, "Tor",_G.CH.Torso.Name)
			Hat.Rename2("rbxassetid://".._G.CH.LeftArm.TextureId,"",_G.CH.LeftArm.Name,"LARM")
			Hat.Rename2("rbxassetid://".._G.CH.RightArm.TextureId,"",_G.CH.RightArm.Name,"RARM")
			Hat.Rename2("rbxassetid://".._G.CH.LeftLeg.TextureId,"Accessory (LLeg)",_G.CH.LeftLeg.Name)
			Hat.Rename2("rbxassetid://".._G.CH.RightLeg.TextureId,"Accessory (rightleg)",_G.CH.RightLeg.Name)	
			Hat.Rename2("http://www.roblox.com/asset/?id=".._G.CH.Torso.TextureId, "Tor",_G.CH.Torso.Name)
			Hat.Rename2("http://www.roblox.com/asset/?id=".._G.CH.LeftArm.TextureId,"",_G.CH.LeftArm.Name,"LARM")
			Hat.Rename2("http://www.roblox.com/asset/?id=".._G.CH.RightArm.TextureId,"",_G.CH.RightArm.Name,"RARM")
			Hat.Rename2("http://www.roblox.com/asset/?id=".._G.CH.LeftLeg.TextureId,"Accessory (LLeg)",_G.CH.LeftLeg.Name)
			Hat.Rename2("http://www.roblox.com/asset/?id=".._G.CH.RightLeg.TextureId,"Accessory (rightleg)",_G.CH.RightLeg.Name)	
		end)
	end
	pcall(function()
		c.gooblet.Name = "fooblet"
	end)
	pcall(function()
		c.gooblet.Name = "fooblet"
	end)
	pcall(function()
		c["Accessory (LARM)"].Name = "gooblet"
	end)
	pcall(function()
		c["Accessory (RARM)"].Name = "RARM"
	end)
	pcall(function()
		if not c:FindFirstChild("Accessory (rightleg)") then
			c.gooblet.Name = "Accessory (rightleg)"
		end
	end)
	pcall(function()
		if not c:FindFirstChild("Accessory (LLeg)") then
			c.gooblet.Name = "Accessory (LLeg)"
		end
	end)
	pcall(function()
		c.fooblet.Name = "gooblet"
	end)
	pcall(function()
		if not c:FindFirstChild("Tor") then 
			c.ExtraNoobTorso.Name = "Tor"
		end
	end)
	local nria = false 
	local nlia = false 
	pcall(function()
		if c.Humanoid.RigType == Enum.HumanoidRigType.R6 then
			if c:FindFirstChild("fooblet").Handle:FindFirstChildOfClass("SpecialMesh").TextureId == "rbxassetid://18640914168" then 
				nria = true 
			end 
		elseif c.Humanoid.RigType == Enum.HumanoidRigType.R15 then
			if c:FindFirstChild("fooblet").Handle.TextureID == "rbxassetid://18640914168" then 
				nria = true 
			end 
		end 
	end)
	loadstring(game:HttpGet("https://raw.githubusercontent.com/Nitro-GT/OxideReanim/main/renameclones3"))()
	local flingloop
	function waitForChild(parent, childName)
		local child = parent:findFirstChild(childName)
		if child then return child end
		while true do
			child = parent.ChildAdded:wait()
			if child.Name==childName then return child end
		end
	end
	local char
	if not workspace:FindFirstChild("non") then
		char =  workspace.Terrain.non
	else
		char = workspace.non
	end
	char.HumanoidRootPart.Anchored = false
	speaker = game:GetService("Players").LocalPlayer
	Clip = false
	for i,v in pairs(c:GetChildren()) do
		if v:IsA("Accessory") and v.Name == "Pants" then
			v:Destroy()
		end
	end
	char.Parent = workspace
	c.Parent = char
	_G.Flinging = false
	local swordbigvel = false
	function getRoot(char)
		local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') 
		return rootPart
	end
	local character = game:GetService("Players").LocalPlayer.Character
	local humanoid = character:FindFirstChildOfClass("Humanoid")
	if humanoid and humanoid.SeatPart then
		humanoid.Sit = false
		wait(0.1)
	end
	local hipHeight = humanoid and humanoid.HipHeight > 0 and (humanoid.HipHeight + 1)
	local rootPart = getRoot(character)
	--local rootPartPosition = rootPart.Position
	if _G.HideCharacter == false then
		rootPart.CFrame = CFrame.new(char.HumanoidRootPart.CFrame.X +5 ,char.HumanoidRootPart.CFrame.Y,char.HumanoidRootPart.CFrame.Z +5) 
	else
		--rootPart.CFrame = CFrame.new(char.HumanoidRootPart.CFrame.X   , workspace.FallenPartsDestroyHeight + 100,char.HumanoidRootPart.CFrame.Z  ) 
	end
	for i,v in pairs(c:GetDescendants()) do
		if v:IsA("BasePart") then
			v.AssemblyAngularVelocity = Vector3.new(0,0,0)
			v.AssemblyLinearVelocity = Vector3.new(0,0,0)
		end
	end
	local function force(part,force)
		local bodyforce = Instance.new("BodyForce", part)
		bodyforce.Force = force
	end
	pcall(function() 
		c["gooblet-1"].Name = "fooblet"
	end)
	speaker = game:GetService("Players").LocalPlayer
	for _, child in pairs(c:GetChildren()) do
		if child:IsA("Part") then
			child.Anchored = false
		elseif child:IsA("Accessory") then
			child.Handle.Anchored = true
		end
	end
	for _,v in pairs(c:GetChildren()) do
		if v:IsA("Accessory")  and v.Name ~= "Black" and v.Name ~= "gooblet" and not string.find(v.Name,"LARM") and not string.find(v.Name,"RARM") and v.Name ~= "fooblet" and v.Name ~= "Accessory (rightleg)" and v.Name ~= "Accessory (LARM)"  and v.Name ~= "Rarm" and v.Name ~= "funnihead"  and v.Name ~= "Larm" and v.Name ~= "RectangleFace" and v.Name ~= "Tor" and v.Name ~= "RectangleHead-2"  and v.Name ~= "Tor" and v.Name ~= "Accessory (LLeg)" and v.Name ~= "RARM"  and v.Name ~="Unloaded head"  then
			if not char:FindFirstChild(v.Name) then
				local a = v:Clone()
				a.Handle:BreakJoints()
				Accessory = v
				Handle = Accessory.Handle
				z = a
				a.Parent = char
				a.Handle.Anchored = false
				if _G.TransparentRig == true then
					a.Handle.Transparency = .5
				else 
					a.Handle.Transparency = 1
				end
				a.Handle.CFrame = char.Head.CFrame
				a.Handle.Velocity = Vector3.new(0,0,0)
				a.Handle.Massless = true
				a.Handle.CanCollide = false
				w = Instance.new("Weld",z.Handle)
				w.C0 = w.Parent:FindFirstChildOfClass("Attachment").CFrame
				w.Name = "AccessoryWeld"
				w.Part0 = z.Handle
				a  = w.Parent:FindFirstChildOfClass("Attachment")
				if string.find(a.Name,"Left") then
					if string.find(a.Name,"Shoulder") then
						w.Part1 = char["Left Arm"]
						w.C1 =  char["Left Arm"].LeftShoulderAttachment.CFrame
					end
				elseif string.find(a.Name,"Right") then
					if string.find(a.Name,"Shoulder") then
						w.Part1 = char["Right Arm"]
						w.C1 =  char["Right Arm"].RightShoulderAttachment.CFrame
					end
				elseif string.find(a.Name,"Left") then
					if string.find(a.Name,"Foot") then
						w.Part1 = char["Left Leg"]
						w.C1 =  char["Left Leg"].LeftFootAttachment.CFrame
					end
				elseif string.find(a.Name,"Right") then
					if string.find(a.Name,"Foot") then
						w.Part1 = char["Right Leg"]
						w.C1 =  char["Right Leg"].RightFootAttachment.CFrame
					end
				elseif string.find(a.Name,"Waist") then
					if string.find(a.Name,"Back") then
						w.Part1 = char["Torso"]
						w.C1 =  char["Torso"].WaistBackAttachment.CFrame
					elseif string.find(a.Name,"Center") then 
						w.Part1 = char["Torso"]
						w.C1 =  char["Torso"].WaistCenterAttachment.CFrame
					end    
				elseif string.find(a.Name,"Body") then
					if string.find(a.Name,"Back") then
						w.Part1 = char["Torso"]
						w.C1 =  char["Torso"].BodyBackAttachment.CFrame
					elseif  string.find(a.Name,"Front") then
						w.Part1 = char["Torso"]
						w.C1 =  char["Torso"].BodyFrontAttachment.CFrame
					end    
				elseif string.find(a.Name,"Hat") then
					w.Part1 = char["Head"]
					w.C1 =  char["Head"].HatAttachment.CFrame 
				elseif string.find(a.Name,"FaceFront") then
					w.Part1 = char["Head"]
					w.C1 =  char["Head"].FaceFrontAttachment.CFrame 
				elseif string.find(a.Name,"FaceCenter") then
					w.Part1 = char["Head"]
					w.C1 =  char["Head"].FaceCenterAttachment.CFrame 
				elseif string.find(a.Name,"Neck") then
					w.Part1 = char["Torso"]
					w.C1 =  char["Torso"].NeckAttachment.CFrame 
				elseif string.find(a.Name,"Hair") then
					w.Part1 = char["Head"]
					w.C1 =  char["Head"].HairAttachment.CFrame 
				end
			end
		end
	end
	for _,v in pairs(c:GetChildren()) do
		if v:IsA("Accessory") and v.Name ~= "RectangleHead" and v.Name ~= "RectangleHead-1"  and v.Name ~= "RectangleHead-3"  and v.Name ~= "funnihead" and v.Name ~= "RectangleFace-1" and v.Name ~= "RectangleFace" and v.Name ~= "RectangleFace-2" and v.Name ~= "RectangleHead-2"     then
			v.Handle:BreakJoints()
		end
	end 
	for _,v in pairs(c:GetChildren()) do
		if v:IsA("Accessory") and v.Name == "RectangleHead" and v.Name =="Puffer Vest" and v.Name == "RectangleFace" and v.Name == "RectangleFace-2" and v.Name == "RectangleHead-2"     then
			v.Handle:BreakJoints()
		end
	end 
	for _, child in pairs(char:GetChildren()) do
		local v = child
		if child:IsA("BasePart")  then
			child.Transparency = 1 
		end
	end
	for _, child in pairs(char:GetChildren()) do
		local v = child
		if child:IsA("Accessory")  then
			child.Handle.Transparency = 1 
		end
	end
	local ch = game:GetService("Players").LocalPlayer.Character
	local prt=Instance.new("Model", workspace)
	local z1 =  Instance.new("Part", prt)
	z1.Name="Torso"
	z1.CanCollide = false
	z1.Anchored = true
	local z2  =Instance.new("Part", prt)
	z2.Name="Head"
	z2.Anchored = true
	z2.CanCollide = false
	local z3 =Instance.new("Humanoid", prt)
	z3.Name="Humanoid"
	z1.Position = Vector3.new(0,9999,0)
	z2.Position = Vector3.new(0,9991,0)
	local lp = game:GetService("Players").LocalPlayer
if _G.Tools == true then
	for i,v in tools do
		table.remove(tools,table.find(tools,v))
	end
	for i,v in pairs(lp.Backpack:GetChildren()) do 
		if v:IsA("Tool") and not string.find(v.Name,"FAKE")  then 
			pcall(function()
				v.Handle.CanCollide = false
			end)
			table.insert(tools,v)
		end 
	end
local welds = {}
	for i,v in tools do
		
		pcall(function()
			v.Parent = c 
			v.Parent = lp.Backpack
			v.Parent = c 
			v.Parent = lp.Backpack
			if not char:FindFirstChild("FAKE"..v.Name) and not lp.Backpack:FindFirstChild("FAKE"..v.Name) then
			task.spawn(function()
				if game.PlaceId == 155615604 then 
					task.wait()
				else 
				task.wait(.001)
				end 
			local fv = v:Clone()
			fv.Parent = lp.Backpack 
			local oldn = fv.Name 
			fv.Name = "FAKE"..oldn
			local fvr
			table.insert(faketools,fv)
			pcall(function()
				fv.Handle.Transparency = 1 
			end)
			if game.PlaceId == 155615604 then 
			for i,v in pairs(fv:GetDescendants()) do 
				if v:IsA("Weld") then 
					local par = v.Parent
					fvr =	v.Parent.ChildRemoved:Connect(function(p)
						if p:IsA("Weld") and p.Part1 == v.Part1 then 
							v= v:Clone()
							v.Parent = par
						end
					end)
				end 
			end
			
			local q
		 q =	fv.AncestryChanged:Connect(function(pa,p)
				if p == nil then
					pcall(function()
fvr:Disconnect()
					end)
q:Disconnect()
print("q:"..tostring(q.Connected))
pcall(function()
print(fvr.Connected)
end)
				end
				end)
			end
				pcall(function()
			v.Handle.CFrame = char.HumanoidRootPart.CFrame *CFrame.new(0,-25,5)
				end)
	end)
end
		end)
	end
end
	task.spawn(function()
		task.wait(.01)
		for i,v in tools do
			v.Parent = c
		end
		for i,v in tools do
			v.Parent = lp.Backpack
		end
		c:BreakJoints()	
		for i,v in tools do
			v.Parent = c
		end
	end)
	task.spawn(function()	
		task.wait(.02)
		game:GetService("Players").LocalPlayer.Character=char
	end)
	c.ChildAdded:Connect(function(v)
		if v:IsA("Tool") and not string.find(v.Name,"FAKE") and not tools[table.find(tools,v)] and not char:FindFirstChild("FAKE"..v.Name) and not lp.Backpack:FindFirstChild("FAKE"..v.Name) then 
			pcall(function()
				v.Handle.CanCollide = false
			end)
			table.insert(tools,v)
			local fv = v:Clone()
			task.wait(.001)
			for i,v in pairs(char:GetChildren()) do
				if v:IsA("Tool") then
					v.Parent = lp.Backpack
				end
			end
			fv.Parent = char
			local oldn = fv.Name 
			fv.Name = "FAKE"..oldn
			table.insert(faketools,fv)
			pcall(function()
				fv.Handle.Transparency = 1 
			end)
			v.Handle.CFrame = char.HumanoidRootPart.CFrame *CFrame.new(0,-25,5)
		end 
	end)
	prt:Destroy()
	local clock = os.clock
	local rad, cos, sin, random = math.rad, math.cos, math.sin, math.random
	local lp =  game:GetService("Players").LocalPlayer
	local clock = os.clock
	local rad, cos, sin, random = math.rad, math.cos, math.sin, math.random
	local antisleepMultiplier=Vector3.new(-.0025,-.005,-.0025)
	local velocity = game:GetService("RunService").Heartbeat:Connect(function()
		for i,v in pairs(c:GetChildren()) do
			if v:IsA("Accessory") then
				pcall(function()
					v.Handle.CanCollide = false
					v.Handle.AssemblyLinearVelocity = Vector3.new(char.Torso.AssemblyLinearVelocity.X*15, 26.794, char.Torso.AssemblyLinearVelocity.Z*15) 
				end)
			elseif v:IsA("Tool") then 
				for i,x in pairs(v:GetDescendants()) do 
					if x:IsA("BasePart") then 
						x.CanCollide = false
						x.AssemblyLinearVelocity = Vector3.new(char.Torso.AssemblyLinearVelocity.X*15, 26.794, char.Torso.AssemblyLinearVelocity.Z*15) 
					end
				end
			end
		end
	end)
	--wait(game:GetService("Players").RespawnTime + 0.25)  
	for _, child in pairs(c:GetChildren()) do
		if child:IsA("Part") then
			child.Anchored = true
		elseif child:IsA("Accessory") then
			child.Handle.Anchored = true
		end
	end
	local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/TypicallyAUser/TypicalsConvertingLibrary/main/Main"))()
	for _, child in pairs(c:GetChildren()) do
		if child:IsA("Part") then
			child.Anchored = true
		elseif child:IsA("Accessory") then
			child.Handle.Anchored = false
		end
	end
	local removinghealth = false
	pcall(function()
		for _,v in pairs(c:GetChildren()) do
			if v:IsA("Accessory") and v.Name == "Heavenly Void Wings" then  
				if c.Humanoid.RigType == Enum.HumanoidRigType.R6 then
					v.Handle.SpecialMesh.MeshId = "rbxassetid://17578463084"
					v.Handle.SpecialMesh.TextureId = ""
					v.Handle.Color = Color3.fromRGB(0,0,0)
				else
					v.Handle.TextureID = ""
					v.Handle.Color = Color3.fromRGB(0,0,0)
				end
			end
		end
	end)
	pcall(function()
		for _,v in pairs(c:GetChildren()) do
			if v:IsA("Accessory") and v.Name == "Ultra-Fabulous Hair" then  
				if c.Humanoid.RigType == Enum.HumanoidRigType.R6 then
					v.Handle.Mesh.TextureId = ""
					v.Handle.Color = Color3.fromRGB(0,0,0)
				else
					v.Handle.TextureID = ""
					v.Handle.Color = Color3.fromRGB(0,0,0)
				end
			end
		end
	end)  
	if _G.SBV4R == true then
		pcall(function()
			local v = c:WaitForChild("fooblet")
			if c.Humanoid.RigType == Enum.HumanoidRigType.R6 then
				v.Handle.SpecialMesh.TextureId = ""
			else
				v.Handle.TextureID = ""
			end
			v.Handle.Material = 1584
			v.Handle.Transparency = 1
			char["Right Arm"].Transparency = 0
			char["Right Arm"].Material = 1584
		end)
	end
	local connect
	pcall(function()
		--char.Animate.Disabled = false
	end)
	local sin = math.sin
	local plrs = game:GetService("Players")
	local antisleepMultiplier=Vector3.new(.0025,.005,.0025)
	if _G.CustomHats == false then
	connect = game:GetService("RunService").Heartbeat:Connect(function(set)
		sine=os.clock
		local antisleep=sin(sine()*100)*antisleepMultiplier
		plrs.LocalPlayer.SimulationRadius = #plrs:GetChildren()*1000
		pcall(function()
			c["Tor"].Handle.CFrame = char["Torso"].CFrame   + antisleep
			c["Tor"].Handle.Transparency = .25
		end)
		pcall(function()
			if nlia == false then 
				c["gooblet"].Handle.CFrame = char["Left Arm"].CFrame * CFrame.Angles(math.rad(0),math.rad(0),math.rad(90))  +antisleep
			else 
				c["gooblet"].Handle.CFrame = char["Left Arm"].CFrame * CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))  +antisleep
			end
			c["gooblet"].Handle.Transparency = .25
		end)
		pcall(function()
			if nria == false then 
				c["fooblet"].Handle.CFrame = char["Right Arm"].CFrame * CFrame.Angles(math.rad(0),math.rad(0),math.rad(90))+antisleep
			else 
				c["fooblet"].Handle.CFrame = char["Right Arm"].CFrame * CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))+antisleep
			end
			c["fooblet"].Handle.Transparency = .25
			char["Right Arm"].CanTouch = true
		end)
				pcall(function()
			c["Accessory (rightleg)"].Handle.CFrame = char["Right Leg"].CFrame  * CFrame.Angles(math.rad(0),math.rad(0),math.rad(90))  +antisleep
			c["Accessory (rightleg)"].Handle.Transparency = .25
		end)
		pcall(function()
			c["Accessory (LLeg)"].Handle.CFrame = char["Left Leg"].CFrame  * CFrame.Angles(math.rad(0),math.rad(0),math.rad(90))  +antisleep
			c["Accessory (LLeg)"].Handle.Transparency = .25
		end)
		pcall(function()
			for _,v in pairs(c:GetChildren()) do
				if v:IsA("Accessory") and v.Name ~= "gooblet" and v.Name ~= "fooblet"   and v.Name ~= "Tor" and v.Name ~= "LARM" and v.Name ~= "RARM" and v.Name ~= "Accessory (rightleg)" and v.Name ~= "Accessory (LLeg)" then  
					v.Handle.CFrame = char[v.Name].Handle.CFrame +antisleep
					v.Handle.CanTouch = false
					v.Handle.Transparency = .9
				end
			end
		end)
		pcall(function()
			for _,v in pairs(char:GetChildren()) do
				if v:IsA("Accessory") and v.Name ~= "gooblet" and not string.find(v.Name, "gooblet") and v.Name ~= "fooblet"   and v.Name ~= "Tor" and v.Name ~= "LARM" and v.Name ~= "RARM" and v.Name ~= "Accessory (rightleg)" and v.Name ~= "Accessory (LLeg)" then  
					if not c:FindFirstChild(v.Name) then 
						v.Handle.Transparency = 0.5
					end
				end
			end
			if not c:FindFirstChild("gooblet") then 
				char["Left Arm"].Transparency = 0.5
			end 
			if not c:FindFirstChild("fooblet") then 
				char["Right Arm"].Transparency = 0.5
			end 
			if not c:FindFirstChild("Accessory (rightleg)") then 
				char["Right Leg"].Transparency = 0.5
			end 
			if not c:FindFirstChild("Accessory (LLeg)") then 
				char["Left Leg"].Transparency = 0.5
			end 
			if not c:FindFirstChild("Tor") then 
				char["Torso"].Transparency = 0.5
			end 
		end)
		pcall(function()
				for _,v in pairs(c:GetChildren()) do
					if v:IsA("Accessory")   then
						v.Handle.CanCollide = false
						v.Handle.CanTouch = false
						--v.Handle.Material = Enum.Material.Glass
						v.Handle.Reflectance = -1
					end
				end
		end)
		for i,z in pairs(c:GetChildren()) do
			if z:IsA("Tool")  then
				for i,v in pairs(z:GetDescendants()) do 
					if v:IsA("BasePart") then
						pcall(function()
					if not char:FindFirstChild("FAKE"..z.Name) then
						v.CFrame = char.HumanoidRootPart.CFrame *CFrame.new(0,-50,0)
					else 
						if v.Name == "Handle" then 
							v.CFrame = char:FindFirstChild("FAKE"..z.Name).Handle.CFrame
						else
							if v.Parent == z then
						v.CFrame = char:FindFirstChild("FAKE"..z.Name)[v.Name].CFrame + antisleep  
							else 
								v.CFrame = char:FindFirstChild("FAKE"..z.Name)[v.Parent.Name][v.Name].CFrame + antisleep  	
							end
						end
					end
				end)
			end
			end
			end
		end
		settings().Physics.AllowSleep = false
	end)
else 
	connect = game:GetService("RunService").Heartbeat:Connect(function(set)
		sine=os.clock
		local antisleep=sin(sine()*100)*antisleepMultiplier
		plrs.LocalPlayer.SimulationRadius = #plrs:GetChildren()*1000
		pcall(function()
			c["Tor"].Handle.CFrame = char["Torso"].CFrame  * _G.CH.Torso.Orientation + antisleep
			c["Tor"].Handle.Transparency = .25
		end)
		pcall(function()
			c["gooblet"].Handle.CFrame = char["Left Arm"].CFrame * _G.CH.LeftArm.Orientation  +antisleep
			c["gooblet"].Handle.Transparency = .25
		end)
		pcall(function()
			c["fooblet"].Handle.CFrame = char["Right Arm"].CFrame * _G.CH.RightArm.Orientation +antisleep
			c["fooblet"].Handle.Transparency = .25
		end)
		pcall(function()
			c["Accessory (rightleg)"].Handle.CFrame = char["Right Leg"].CFrame  * _G.CH.RightLeg.Orientation  +antisleep
			c["Accessory (rightleg)"].Handle.Transparency = .25
		end)
		pcall(function()
			c["Accessory (LLeg)"].Handle.CFrame = char["Left Leg"].CFrame  * _G.CH.LeftLeg.Orientation  + antisleep
			c["Accessory (LLeg)"].Handle.Transparency = .25
		end)
		pcall(function()
			for _,v in pairs(c:GetChildren()) do
				if v:IsA("Accessory") and v.Name ~= "gooblet" and v.Name ~= "fooblet"   and v.Name ~= "Tor" and v.Name ~= "LARM" and v.Name ~= "RARM" and v.Name ~= "Accessory (rightleg)" and v.Name ~= "Accessory (LLeg)" then  
					v.Handle.CFrame = char[v.Name].Handle.CFrame +antisleep
					v.Handle.CanTouch = false
					v.Handle.Transparency = .9
				end
			end
		end)
		pcall(function()
			for _,v in pairs(char:GetChildren()) do
				if v:IsA("Accessory") and v.Name ~= "gooblet" and not string.find(v.Name, "gooblet") and v.Name ~= "fooblet"   and v.Name ~= "Tor" and v.Name ~= "LARM" and v.Name ~= "RARM" and v.Name ~= "Accessory (rightleg)" and v.Name ~= "Accessory (LLeg)" then  
					if not c:FindFirstChild(v.Name) then 
						v.Handle.Transparency = 0.5
					end
				end
			end
			if not c:FindFirstChild("gooblet") then 
				char["Left Arm"].Transparency = 0.5
			end 
			if not c:FindFirstChild("fooblet") then 
				char["Right Arm"].Transparency = 0.5
			end 
			if not c:FindFirstChild("Accessory (rightleg)") then 
				char["Right Leg"].Transparency = 0.5
			end 
			if not c:FindFirstChild("Accessory (LLeg)") then 
				char["Left Leg"].Transparency = 0.5
			end 
			if not c:FindFirstChild("Tor") then 
				char["Torso"].Transparency = 0.5
			end 
		end)
		pcall(function()
				for _,v in pairs(c:GetChildren()) do
					if v:IsA("Accessory")   then
						v.Handle.CanCollide = false
						v.Handle.CanTouch = false
						--v.Handle.Material = Enum.Material.Glass
						v.Handle.Reflectance = -1
					end
				end
		end)
		for i,z in pairs(c:GetChildren()) do
			if z:IsA("Tool")  then
				for i,v in pairs(z:GetDescendants()) do 
					if v:IsA("BasePart") then
						pcall(function()
					if not char:FindFirstChild("FAKE"..z.Name) then
						v.CFrame = char.HumanoidRootPart.CFrame *CFrame.new(0,-50,0)
					else 
						if v.Name == "Handle" then 
							v.CFrame = char:FindFirstChild("FAKE"..z.Name).Handle.CFrame
						else
							if v.Parent == z then
						v.CFrame = char:FindFirstChild("FAKE"..z.Name)[v.Name].CFrame + antisleep  
							else 
								v.CFrame = char:FindFirstChild("FAKE"..z.Name)[v.Parent.Name][v.Name].CFrame + antisleep  	
							end
						end
					end
				end)
			end
			end
			end
		end
		settings().Physics.AllowSleep = false
	end)
end
	settings().Physics.AllowSleep = false
	for _, child in pairs(c:GetChildren()) do
		if child:IsA("Part") then
			child.Anchored = false
		elseif child:IsA("Accessory") then
			child.Handle.Anchored = false
		end
	end
end
redo()
game:GetService("StarterGui"):SetCore("SendNotification", {
	Title = "Oxide Reanimation V2.1a - Respawn Time";
	Duration = 20;
	Text = "Your character will refit (respawn) every "..game:GetService("Players").RespawnTime.." seconds."
})
local function cfAdd(a,b) return a+b end
local sin=math.sin
respawnloop = plr.CharacterAdded:Connect(function(re)
	for i,v in pairs(plr.Backpack:GetDescendants()) do 
		if v:IsA("Sound") and v:FindFirstAncestorOfClass("Tool") then 
			v.Volume = 0 
			v.SoundId = "rbxassetid://0"
		end 
	end
if re.Name ~= "non" then 
replicatesignal(game:GetService("Players").LocalPlayer.ConnectDiedSignalBackend)
	task.wait(game.Players.RespawnTime)
end
	if _G.HideCharacter == false then
		if plr.Character.Name ~= "non" then
			if workspace:FindFirstChild("non") then
				if plr.Character.Name ~= "non" then
					plr.Character.HumanoidRootPart.CFrame = CFrame.new( workspace.non.HumanoidRootPart.CFrame.X +5 , workspace.non.HumanoidRootPart.CFrame.Y, workspace.non.HumanoidRootPart.CFrame.Z +5) 
				end
				task.wait(.005)
				redo2()
			else
				workspace.CurrentCamera.CameraSubject = workspace.Terrain.non:FindFirstChildOfClass("Humanoid")
				if plr.Character.Name ~= "non" then
					plr.Character.HumanoidRootPart.CFrame = CFrame.new( workspace.Terrain.non.HumanoidRootPart.CFrame.X +5 , workspace.Terrain.non.HumanoidRootPart.CFrame.Y, workspace.Terrain.non.HumanoidRootPart.CFrame.Z +5) 
				end
				task.wait(.005)
				redo2()
			end
		end
	else
		--setsimulationradius(9e9)
		local flingloop
		local c = re
		if plr.Character.Name ~= "non" then
			if plr.Character.Name ~= "non" then     
				if plr.Character.Name ~= "non" then     
					if _G.TeleportCharacter == true then
					if _G.HatCollide == false then
						plr.Character:WaitForChild("HumanoidRootPart").CFrame =CFrame.new( workspace.non.HumanoidRootPart.CFrame.X  , oldh + 50, workspace.non.HumanoidRootPart.CFrame.Z  ) 
					else 
						plr.Character:WaitForChild("HumanoidRootPart").CFrame =CFrame.new( workspace.non.HumanoidRootPart.CFrame.X  , oldh + .25, workspace.non.HumanoidRootPart.CFrame.Z  ) 
					end
				end
				end
			end
			local lp = game.Players.LocalPlayer
			local cf = CFrame.new
			local ws = workspace 
			local twait = task.wait
			local c=lp.Character
			plr.Character:WaitForChild("HumanoidRootPart"):ClearAllChildren()
			if c.Name ~= "non" then
				if _G.HatCollide == true then
					c:BreakJoints()
					c:WaitForChild("Humanoid").Health = 0
				end
				repeat twait() until c:FindFirstChildOfClass"Accessory" or not c:IsDescendantOf(ws)
				if not c:IsDescendantOf(ws) then
					return 
				end
			end
			task.wait(.005)
			redo2()
		end
	end
end)
local Mouse = game:GetService("Players").LocalPlayer:GetMouse()
